status = error
name = LogstashPropertiesConfig

# Console appender (plain text)
appender.console.type = Console
appender.console.name = plain_console
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = [%d{ISO8601}][%-5p][%-25c]%notEmpty{[%X{pipeline.id}]}%notEmpty{[%X{plugin.id}]} %m%n

# Console appender (JSON)
appender.json_console.type = Console
appender.json_console.name = json_console
appender.json_console.layout.type = JsonLayout
appender.json_console.layout.compact = true
appender.json_console.layout.eventEol = true

# Rolling file appender
appender.rolling.type = RollingFile
appender.rolling.name = plain_rolling
appender.rolling.fileName = ${sys:ls.logs}/${sys:ls.logfile.name}.log
appender.rolling.filePattern = ${sys:ls.logs}/${sys:ls.logfile.name}-%d{yyyy-MM-dd}.log.gz
appender.rolling.layout.type = PatternLayout
appender.rolling.layout.pattern = [%d{ISO8601}][%-5p][%-25c]%notEmpty{[%X{pipeline.id}]}%notEmpty{[%X{plugin.id}]} %m%n
appender.rolling.policies.type = Policies
appender.rolling.policies.time.type = TimeBasedTriggeringPolicy
appender.rolling.policies.time.interval = 1
appender.rolling.policies.time.modulate = true

# Root logger: send to both plain and rolling
rootLogger.level = info
rootLogger.appenderRef.console.ref = plain_console
rootLogger.appenderRef.rolling.ref = plain_rolling

# JSON logger on debug
logger.json.name = org.logstash.JsonRepresentationStrategy
logger.json.level = debug
logger.json.appenderRef.json_console.ref = json_console
